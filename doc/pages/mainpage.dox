/*!
	@mainpage A Multiscale Differential Complex - Short Mathematical Problem Description
	
	\tableofcontents

		
	@section sec1 The de Rham Complex with Rough Weighting
	
	The purpose of this work is to introduce a unifiying framework
	for the construction of stable pairings of conforming multiscale
	finite elements in all spaces across the \f$L^2\f$-Hilbert complex
	
	\f{eqnarray}{
	
		0
		\stackrel{}{\rightarrow}
		L^2\Lambda^0(\Omega,A_{\varepsilon, 0})
		\stackrel{\nabla}{\longrightarrow}
		L^2\Lambda^1(\Omega,A_{\varepsilon, 1})
		\stackrel{\nabla\times}{\longrightarrow}
		L^2\Lambda^2(\Omega,A_{\varepsilon, 2})
		\stackrel{\nabla\cdot}{\longrightarrow}
		L^2\Lambda^3(\Omega,A_{\varepsilon, 3})
		\stackrel{}{\rightarrow}
		0
	  	
  	\f}
  	
  	whose domain complex is a modified \f$L^2\f$-de Rham complex.
  	
  	\f{eqnarray}{
	
		0
		\stackrel{}{\rightarrow}
		H^1(\Omega,A_{\varepsilon, 0})
		\stackrel{\nabla}{\longrightarrow}
		H(\mathrm{curl})(\Omega,A_{\varepsilon, 1})
		\stackrel{\nabla\times}{\longrightarrow}
		H(\mathrm{div})(\Omega,A_{\varepsilon, 2})
		\stackrel{\nabla\cdot}{\longrightarrow}
		L^2(\Omega,A_{\varepsilon, 3})
		\stackrel{}{\rightarrow}
		0
	  	
  	\f}
  		
	for the Hodge-Laplace equation when weighted with rough coefficients.
	
	This amouts to either solving scalar Laplace equations with rough
	coefficients in standard or mixed form or to solving vector valued Laplace
	equations in mixed form in spaces whose scalar procucts are weighted with
	rough positive coefficient functions. The latter seeks an (orthogonal) Helmholtz-Hodge
	decomposition (generalized Helmholtz decomposition) into threee types of functions: 
	curl-free fields, divergence-free fields and so called hamonic forms with different
	boundary conditions dependent on the auxiliary variable chosen.   
	 

	
	@section sec2 The Hodge-Laplace Problem with Rough Coeffients
	
	We consider a modified Hodge-Laplace equation on the unit square
	\f$\Omega = [0,1]^3 \f$:
		
	\f{eqnarray}{
	
	\mathrm{d}(A_{\varepsilon ,k+1}^{-1} \mathrm{d}^\ast)u_k + \mathrm{d}^\ast(A_{\varepsilon, k+1} \mathrm{d})u_k = f_k - P_{\mathfrak{h}^k}
	
	\f}		
	
	for positive coefficients \f$A_\varepsilon^k\f$ and \f$k=0,\dots ,3\f$.
	
	In 3D this essentially amounts in two different equation - a scalar one and a vectorial one. The scalar case reads	
	 
	\f{eqnarray}{
	
	\nabla\cdot(A_\varepsilon \nabla u) = f - P_\mathfrak{h}
	
	\f}
	
	and the vector case reads
	
	\f{eqnarray*}{
	
	\nabla\times(A_\varepsilon \nabla\times u) + \nabla(B_\varepsilon \nabla\cdot u) = f - P_\mathfrak{h}
	
	\f}
	 
	apart from possibly switching the roles of the coeffcients. 
	
	@note We solve the equation on prototypically on the unit cube. Although more complicated domains are easily
	possible we do not take into account harmonic forms for the vector Laplacian. That means that the 3D domains 
	should not have voids or handles. This will be changed in the future.


	
	@section sec3 Notes about the Code
	
	The code is
	<ul>
		<li> implemented in 3D using the deal.ii library
		<li> MPI parallel and can be used on clusters (grids and solvers are parallelized)
		<li> documented using doxygen
		<li> mathematically documented in an upcoming paper
		<li> available under a LPGL license (see license, note that other parts have different licenses)
 	</ul>	
*/
